"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var promise_proxy_1 = require("./promise-proxy");
var PromiseState;
(function (PromiseState) {
    PromiseState["Pending"] = "pending";
    PromiseState["Resolved"] = "resolved";
    PromiseState["Rejected"] = "rejected";
})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));
var proxy = new promise_proxy_1.default();
var context = React.createContext({
    state: PromiseState.Pending,
});
function isFunction(children) {
    return "function" === typeof children;
}
function Pending(_a) {
    var children = _a.children;
    return (React.createElement(context.Consumer, null, function (_a) {
        var state = _a.state;
        return PromiseState.Pending === state
            ? isFunction(children) ? children() : children
            : null;
    }));
}
exports.Pending = Pending;
function Resolved(_a) {
    var children = _a.children;
    return (React.createElement(context.Consumer, null, function (_a) {
        var state = _a.state, result = _a.result;
        return PromiseState.Resolved === state
            ? isFunction(children) ? children(result) : children
            : null;
    }));
}
exports.Resolved = Resolved;
function Rejected(_a) {
    var children = _a.children;
    return (React.createElement(context.Consumer, null, function (_a) {
        var state = _a.state, reason = _a.reason;
        return PromiseState.Rejected === state
            ? isFunction(children) ? children(reason) : children
            : null;
    }));
}
exports.Rejected = Rejected;
function Then(_a) {
    var children = _a.children;
    return (React.createElement(context.Consumer, null, function (_a) {
        var state = _a.state, result = _a.result, reason = _a.reason;
        return children(state, result, reason);
    }));
}
exports.Then = Then;
var Await = (function (_super) {
    __extends(Await, _super);
    function Await() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            state: PromiseState.Pending,
            result: void 0,
            reason: void 0,
        };
        return _this;
    }
    Await.prototype.componentDidMount = function () {
        this.bindPromise(this.props.promise);
    };
    Await.prototype.componentDidUpdate = function (prevProps) {
        var promise = this.props.promise;
        if (promise === prevProps.promise) {
            return;
        }
        if (prevProps.promise) {
            proxy.remove(this, prevProps.promise);
        }
        this.bindPromise(promise);
        this.setState({
            reason: void 0,
            result: void 0,
            state: PromiseState.Pending,
        });
    };
    Await.prototype.componentWillUnmount = function () {
        var promise = this.props.promise;
        if (promise) {
            proxy.remove(this, promise);
        }
    };
    Await.prototype.render = function () {
        return (React.createElement(context.Provider, { value: this.state }, this.props.children));
    };
    Await.prototype.bindPromise = function (promise) {
        var _this = this;
        if (!promise) {
            return;
        }
        proxy.add(this, promise, function (result) { return _this.setState({ state: PromiseState.Resolved, reason: void 0, result: result }); }, function (reason) { return _this.setState({ state: PromiseState.Rejected, reason: reason, result: void 0 }); });
    };
    return Await;
}(React.PureComponent));
exports.Await = Await;
//# sourceMappingURL=react-await.js.map