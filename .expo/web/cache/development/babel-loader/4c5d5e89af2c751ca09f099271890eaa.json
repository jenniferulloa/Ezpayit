{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\srija\\\\Ezpayit\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StackScreen from \"./screens/StackScreen\";\nimport DrawerScreen from \"./screens/DrawerScreen\";\n\nvar App = function App() {\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(DrawerScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/srija/Ezpayit/App.js"],"names":["React","useEffect","NavigationContainer","StackScreen","DrawerScreen","App","initialLoginState","isLoading","userName","userToken","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;;;;;;;AAMA,OAAOC,WAAP;AACA,OAAOC,YAAP;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAO;AAEjB,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,SAAS,EAAE,IADa;AAExBC,IAAAA,QAAQ,EAAE,IAFc;AAGxBC,IAAAA,SAAS,EAAE;AAHa,GAA1B;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,MAAZ,EAAuB;AAC1C,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,gBAAL;AACE,+CACKF,SADL;AAEEF,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAFpB;AAGEP,UAAAA,SAAS,EAAE;AAHb;;AAKF,WAAK,OAAL;AACE,+CACKI,SADL;AAEEH,UAAAA,QAAQ,EAAEI,MAAM,CAACG,EAFnB;AAGEN,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAHpB;AAIEP,UAAAA,SAAS,EAAE;AAJb;;AAMF,WAAK,QAAL;AACE,+CACKI,SADL;AAEEH,UAAAA,QAAQ,EAAE,IAFZ;AAGEC,UAAAA,SAAS,EAAE,IAHb;AAIEF,UAAAA,SAAS,EAAE;AAJb;;AAMF,WAAK,UAAL;AACE,+CACKI,SADL;AAEEH,UAAAA,QAAQ,EAAEI,MAAM,CAACG,EAFnB;AAGEN,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAHpB;AAIEP,UAAAA,SAAS,EAAE;AAJb;AAtBJ;AA6BD,GA9BD;;AARiB,0BAwCcP,KAAK,CAACgB,UAAN,CAAiBN,YAAjB,EAA+BJ,iBAA/B,CAxCd;AAAA;AAAA,MAwCVW,UAxCU;AAAA,MAwCEC,QAxCF;;AA0CjB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAsBD,CAhED;;AAkEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AAUA,eAAerB,GAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n//import AsyncStorage from '@react-native-community/async-storage';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n\r\n//import { useEffect } from 'react';\r\n\r\nimport StackScreen from './screens/StackScreen';\r\nimport DrawerScreen from './screens/DrawerScreen';\r\n\r\n\r\n\r\n\r\n//import { AuthContext } from './components/context';\r\n\r\nconst App = () =>  {\r\n\r\n  const initialLoginState = {\r\n    isLoading: true,\r\n    userName: null,\r\n    userToken: null,\r\n  };\r\n\r\n  const loginReducer = (prevState, action) => {\r\n    switch( action.type ) {\r\n      case 'RETRIEVE_TOKEN': \r\n        return {\r\n          ...prevState,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGIN': \r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGOUT': \r\n        return {\r\n          ...prevState,\r\n          userName: null,\r\n          userToken: null,\r\n          isLoading: false,\r\n        };\r\n      case 'REGISTER': \r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\r\n \r\n  return (\r\n    <NavigationContainer>\r\n   {/* { loginState.userToken == null ? ( */}\r\n      <DrawerScreen/>\r\n    {/* )\r\n    :\r\n      <StackScreen/>\r\n    } */}\r\n  </NavigationContainer>\r\n\r\n\r\n\r\n    // <NavigationContainer>\r\n    // <StackScreen/>\r\n    //   {/* <Stack.Navigator screenOptions={globalScreenOptions}> */}\r\n    //     {/* <Stack.Screen name='Login' component={LoginScreen}/> */}\r\n    //     {/* <Stack.Screen name='Register' component={RegisterScreen}/> */}\r\n    //     {/* <Stack.Screen name='Home' component={mainScreen}/> */}\r\n      \r\n    // </NavigationContainer>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n});\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}